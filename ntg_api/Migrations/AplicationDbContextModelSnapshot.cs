// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ntg_api.Data;

namespace ntg_api.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ntg_api.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseName = "English",
                            Price = 20000
                        },
                        new
                        {
                            Id = 2,
                            CourseName = "French",
                            Price = 90000
                        },
                        new
                        {
                            Id = 3,
                            CourseName = "Business Administration",
                            Price = 90000
                        },
                        new
                        {
                            Id = 4,
                            CourseName = "ICDL",
                            Price = 70000
                        },
                        new
                        {
                            Id = 5,
                            CourseName = "Communication skills",
                            Price = 50000
                        });
                });

            modelBuilder.Entity("ntg_api.Models.CourseTeacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("courseTeachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 2,
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 3,
                            TeacherId = 5
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            TeacherId = 6
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 4,
                            TeacherId = 7
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 4,
                            TeacherId = 8
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 5,
                            TeacherId = 9
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 5,
                            TeacherId = 8
                        });
                });

            modelBuilder.Entity("ntg_api.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("CourseTeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseTeacherId");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Damascus",
                            Age = 23,
                            CourseTeacherId = 1,
                            Name = "Nermeen Jabban",
                            Phonenumber = "+9636987654"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Damascus",
                            Age = 23,
                            CourseTeacherId = 2,
                            Name = "Ahmad Ali",
                            Phonenumber = "+963458722"
                        });
                });

            modelBuilder.Entity("ntg_api.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TeacherName = "Gary Cabrera",
                            TeacherType = "male"
                        },
                        new
                        {
                            Id = 2,
                            TeacherName = "Stacy Logan",
                            TeacherType = "male"
                        },
                        new
                        {
                            Id = 3,
                            TeacherName = "Priscilla Phelps",
                            TeacherType = "male"
                        },
                        new
                        {
                            Id = 4,
                            TeacherName = "Aliza Vance",
                            TeacherType = "female"
                        },
                        new
                        {
                            Id = 5,
                            TeacherName = "Averie Carter",
                            TeacherType = "female"
                        },
                        new
                        {
                            Id = 6,
                            TeacherName = "Savannah Brooks",
                            TeacherType = "female"
                        },
                        new
                        {
                            Id = 7,
                            TeacherName = "Belen Fox",
                            TeacherType = "female"
                        },
                        new
                        {
                            Id = 8,
                            TeacherName = "Yadira Mcintyre",
                            TeacherType = "female"
                        },
                        new
                        {
                            Id = 9,
                            TeacherName = "Grayson Stout",
                            TeacherType = "female"
                        });
                });

            modelBuilder.Entity("ntg_api.Models.CourseTeacher", b =>
                {
                    b.HasOne("ntg_api.Models.Course", "Course")
                        .WithMany("CourseTeachers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ntg_api.Models.Teacher", "Teacher")
                        .WithMany("CourseTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ntg_api.Models.Student", b =>
                {
                    b.HasOne("ntg_api.Models.CourseTeacher", "CourseTeacher")
                        .WithMany("Students")
                        .HasForeignKey("CourseTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
